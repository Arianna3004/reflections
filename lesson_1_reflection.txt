How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It can be useful for example for finding misspellings in your code or some 
    error correlated on the update of a specific block of the code.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It can be useful for example if you have uploaded a file and then you change your mind
    and want to return to the previous version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pro is that you can make more resonable commits, the con is that you 
    can forget to commit for a long time while if versions were automatically 
    saved this couldn't happened.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
	
	It may depend by the use of the version control system.

How can you use the commands git log and git diff to view the history of files?
	
	Git log allows me to see all the history of a file or a collection of files 
	(with the option "stat" that allows me to see the history of each file in
	the collection of file updated). The command "diff" instead, allows me to see the differences
	between two specific commit (versions) of a file or a collection of files.

How might using version control make you more confident to make changes that
could break something?
	
	It could make the difference because it allows te user to turn back to the previous versions of
	his work, also the ones that haven't errors.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
